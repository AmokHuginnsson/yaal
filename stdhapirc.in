# $CVSHeader$
# stdhapi library configuration file.
# comments begin with `#' char and continues until end of line
# configuration file is divided into sections, each section
# begins with [secttion_name] mark, each option may be placed
# only in section it belongs to.
# option names are case insensitive
# in most cases option values are case insensitive also
# syntax for settings is:
# ^{option}{white}(['"]){value1 value2 ... valuen}\1{white}# comment$
# value may be surrounded by apostrophes or quotation marks
# one level of this surrounding is stripped
# we currently distinguish between four kind of value types:
# bool   - (true|yes|on|false|no|off)
# char   - [a-z]
# int    - [0-1]+
# string - .+
#
# example:
# log_sql true

### core BEGIN
[core]

# set_env
# type: command, default: N/A
# with set_env configuration command one can preset any environment
# variable, set_env can be used in all sections

# log_mask
# type: special(multi-flag), default: (empty)
# log_mask decides what types of information will be logged
# log_mask can occur in all stdhapirc's sections and flag are
# additive across all sections
# argument to log_mask can be any combination of flags:
# LOG_DEBUG, LOG_INFO, LOG_NOTICE, LOG_WARNING, LOG_ERROR, LOG_CVSHEADER
log_mask LOG_INFO LOG_NOTICE LOG_WARNING LOG_ERROR LOG_CVSHEADER

### core END

### console BEGIN
[console]

# esc_delay
# type: integer, default: 1000
# ESC key code is used to compose escape sequences
# terminal must distinguish if following codes make sequence
# or are separate key presses, to do that ncurses uses esc_delay
# environment variable which holds delay (miliseconds),
# after this time elapses next code is treated as separate character

esc_delay 0

# disable_XON
# type: bool, default: false
# disable XON(/XOFF) flow control on output,
# setting this to `true' disables C-s and C-q special handling
disable_XON true

# leave_ctrl_(c|z|\|q|s)
# type: bool, default: false
# this option decides if input routines
# should treat some key-press combinations special
# should CTRL-c typed by user be discarded by program ?
# is CTRL-z ignored by process?
leave_ctrl_c true
leave_ctrl_z true
leave_ctrl_\ true
leave_ctrl_q true
leave_ctrl_s true

# use_mouse
# type: bool, default: false
# force enabling of mouse interface, warning, when this option
# is enabled and mouse interface is not available stdhapi library
# will not allow execution of any program that uses hconsole api
use_mouse true

# latency
# type: integer, default: 1
# how long should aplication wait for user input before running
# idle-state operation, this value is specified in seconds
latency 1

# command_compose_character
# type: char, default: x
# what character should be used for composing commands,
# composing commands looks like this:
# user presses CTRL-`command_compose_character', which puts
# process into `command mode' and then
# before `command_compose_delay' passes user should
# press real command character, for example,
# if `command_compose_character' is x,
# then "program exit" command would look like:
# CTRL-x x
# note that in this case "exit" command is done by pressing `x'
# in command mode
command_compose_character 'x'

# command_compose_delay
# type: integer, default: 16
# how long hconsole-UI waits in `command mode' for user to type
# in real command
command_compose_delay 16

## colors BEGIN

# attribute_disabled, attribute_enabled, attribute_focused
# type: special(multi-value), default: (look below)
# color option syntax is:
# option foreground-label background-label foreground-data background-data
# color names are:
#	BLACK RED GREEN BROWN BLUE MAGENTA CYAN LIGHTGRAY GRAY BRIGHTRED BRIGHTGREEN
#	YELLOW BRIGHTBLUE BRIGHTMAGENTA BRIGHTCYAN WHITE

# colors common to all windows and controls

# color attributes for disabled control
attribute_disabled GREEN GRAY LIGHTGRAY GRAY

# color attributes for enabled control
attribute_enabled BRIGHTGREEN GRAY WHITE GRAY

# color attributes for focused control
attribute_focused BRIGHTGREEN GRAY BLACK LIGHTGRAY

# special colors
attribute_statusbar WHITE BLACK LIGHTGRAY BLACK
attribute_search_highlight BLACK YELLOW BLACK BROWN

## colors END
### console END

### tools BEGIN
[tools]

# ignore_signal_(SIGINT|SIGTSTP|SIGQUIT)
# type: bool, default: false
# this option tells if process should ignore recievied signal
ignore_signal_SIGINT false
ignore_signal_SIGTSTP false
ignore_signal_SIGQUIT false

# serial port configuration

# serial_device
# type: string, default: (system dependent)
# describes path to device
serial_device '/dev/@SERIAL_DEVICE@'

# serial_baudrate
# type: string, default: B115200
# this option sets serial line connection speed (baudrate)
# baudrate B115200 | B76800 | B57600 | B38400 | B28800
#          | B19200| B14400 | B9600 | B7200 | B4800 | B2400
serial_baudrate B115200

# collector_connection_timeout
# type: integer, default: 9999
# time in seconds, after this time elapses process gives up connection
# to collector atempt
collector_connection_timeout 8

### tools END

### dbwrapper BEGIN
[dbwrapper]

# log SQL queries
log_mask LOG_SQL

# select data base driver
# accepted drivers are:
# SQLite3, SQLite, MySQL, PostgreSQL, Oracle, null, none
# last two drivers disables database interface completly,
# it can by useful for programs that does not use databases
# or for debuging purpouses

# data_base_driver
# type: string, default: (installation dependent)
data_base_driver '@DEFAULT_DRIVER@'

### dbwrapper END

### oracle driver BEGIN
[oracle]

# name of the Oracle instance
# instance_name
# type: string, default: (installation dependent)
instance_name '@ORACLE_SID@'

### oracle driver END
